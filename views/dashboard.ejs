<!DOCTYPE html>
<html>
    <link rel="stylesheet" href="dashboard.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<title>Dashboard</title>
<%-include('partials/header')%>
<style>
    /* Defina um layout para a dashboard */
.dashboard-container {
    display: flex; /* Flexbox para facilitar o layout lado a lado */
    height: 100vh;
}

/* Barra lateral */
.barraLateral {
    width: 250px; /* Ajuste a largura da barra lateral */
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    background-color: #2c3e50;
    color: white;
    padding-top: 20px;
}

/* Área principal */
.main-content {
    margin-left: 250px; /* Deixe um espaço para a barra lateral */
    width: calc(100% - 250px); /* Certifique-se que a área principal ocupe o restante da largura */
    padding: 20px;
    overflow: auto; /* Garante que o conteúdo não ultrapasse a área */
}

/* DataTable */
#Datatable {
    width: 100%;
    table-layout: auto; /* Deixe a tabela se ajustar automaticamente */
    margin-top: 20px;
}

/* Evitar que o DataTable ultrapasse os limites do contêiner */
.table-responsive {
    overflow-x: auto; /* Faz com que a tabela seja rolável se necessário */
    -webkit-overflow-scrolling: touch;
}

</style>

<body>
    <div class="dashboard-container">
        <!-- Barra lateral -->
        <%- include('partials/barraLateral') %>
        
        <!-- Main Content -->
        <div class="main-content">
            <div class="header">
                <h1>Visão Geral do Estoque</h1>
            </div>
            
            <!-- Cards de Resumo -->
            <div class="cards">
                <div class="card">
                    <h3>Valor total em estoque</h3>
                    <p id="total-produtos"></p>
                </div>
                <div class="card">
                    <h3>Produtos Vendidos</h3>
                    <p id="sold-products">120</p>
                </div>
                <div class="card">
                    <h3>Produtos em Falta</h3>
                    <p id="produto_falta">0</p>
                </div>
            </div>
            
            <!-- Gráficos -->
            <div class="charts">
                <div class="chart-container">
                    <canvas id="stockChart"></canvas>
                </div>
                <div class="chart-container">
                    <canvas id="salesChart"></canvas>
                </div>
            </div>

            <!-- DataTable -->
            <div class="table-responsive"> <!-- Adicionando a classe para rolagem -->
                <table id="Datatable" class="table table-striped table-nowrap table-bordered align-middle mb-0">
                    <thead>
                        <tr>
                            <th>PRODUTO</th>
                            <th>MARCA</th>
                            <th>COR</th>
                            <th>VALOR</th>
                            <th>QUANTIDADE</th>
                            <th>MEDIDA</th>
                            <th>AÇÃO</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

<!-- Modal HTML -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Editar Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="input-group flex-nowrap">
                <span style="width: 25%;" class="input-group-text" id="addon-wrapping">PRODUTO</span>
                <input id="produto" type="text" class="form-control" placeholder="Produto" aria-label="Username" aria-describedby="addon-wrapping">
            </div>
            <div class="input-group flex-nowrap">
                <span style="width: 25%;" class="input-group-text" id="addon-wrapping">DESCRIÇÃO</span>
                <input id="descricao" type="text" class="form-control" placeholder="Descrição" aria-label="Username" aria-describedby="addon-wrapping">
            </div>
            <div class="input-group flex-nowrap">
                <span style="width: 25%;" class="input-group-text" id="addon-wrapping">MARCA</span>
                <input id="marca" type="text" class="form-control" placeholder="Marca" aria-label="Username" aria-describedby="addon-wrapping">
            </div>
            <div class="input-group flex-nowrap">
                <span style="width: 25%;" class="input-group-text" id="addon-wrapping">COR</span>
                <input id="cor" type="text" class="form-control" placeholder="Cor" aria-label="Username" aria-describedby="addon-wrapping">
            </div>
            <div class="input-group flex-nowrap">
                <span style="width: 25%;" class="input-group-text" id="addon-wrapping">VALOR</span>
                <input id="valor" type="text" class="form-control" placeholder="Valor" aria-label="Username" aria-describedby="addon-wrapping">
            </div>
            <div class="input-group flex-nowrap">
                <span style="width: 25%;" class="input-group-text" id="addon-wrapping">QUANTIDADE</span>
                <input id="quantidade" type="text" class="form-control" placeholder="Quantidade" aria-label="Username" aria-describedby="addon-wrapping">
            </div>
            <div class="input-group flex-nowrap">
                <span style="width: 25%;" class="input-group-text" id="addon-wrapping">MEDIDA</span>
                <input id="medida" type="text" class="form-control" placeholder="Medida" aria-label="Username" aria-describedby="addon-wrapping">
            </div>
            
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                <button onclick="salvar()" type="button" class="btn btn-primary">Salvar alterações</button>
            </div>
        </div>
    </div>
</div>


<script>

// Gráfico de Estoque
function graficoBarra() {
    const id = sessionStorage.getItem('id_empresa');
    $.ajax({
        url: `/graficoBarra/${id}`,
        method: 'GET',
        contentType: 'application/json'
    }).done((response) => {
        if (response) {
            // Atribuindo as variáveis diretamente com a resposta
            const produto1 = response[0].produto;
            const produto2 = response[1].produto;
            const produto3 = response[2].produto;
            const produto4 = response[3].produto;

            const quantidadeProduto1 = response[0].quantidade; 
            const quantidadeProduto2 = response[1].quantidade;
            const quantidadeProduto3 = response[2].quantidade;
            const quantidadeProduto4 = response[3].quantidade;

            // Configuração do gráfico após obter os dados
            const ctxStock = document.getElementById('stockChart').getContext('2d');
            const stockChart = new Chart(ctxStock, {
                type: 'bar',
                data: {
                    labels: [produto1, produto2, produto3, produto4],
                    datasets: [{
                        label: 'ESTOQUE ATUAL (Os 4 produtos que mais contem unidades em estoque)',
                        data: [quantidadeProduto1, quantidadeProduto2, quantidadeProduto3, quantidadeProduto4],
                        backgroundColor: 'rgba(33, 150, 243, 0.6)',
                        borderColor: '#2196F3',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        } else {
            console.error("Erro: Não foram encontrados dados suficientes para o gráfico.");
        }
    }).fail((jqXHR, textStatus, errorThrown) => {
        console.error("Erro na requisição: " + textStatus, errorThrown);
    });
}



// Gráfico de Vendas
function graficoMinimo() {
    const id = sessionStorage.getItem('id_empresa');

    $.ajax({
        url: `/graficoBarraMin/${id}`,
        method: 'GET',
        contentType: 'application/json'
    }).done((response) => {
        if (response && response.length >= 4) {
            // Atribuindo as variáveis diretamente com a resposta
            const produto1 = response[0].produto;
            const produto2 = response[1].produto;
            const produto3 = response[2].produto;
            const produto4 = response[3].produto;

            const quantidadeProduto1 = response[0].quantidade;
            const quantidadeProduto2 = response[1].quantidade;
            const quantidadeProduto3 = response[2].quantidade;
            const quantidadeProduto4 = response[3].quantidade;

            // Configuração do gráfico após obter os dados
            const ctxSales = document.getElementById('salesChart').getContext('2d');
            const salesChart = new Chart(ctxSales, {
                type: 'bar',
                data: {
                    labels: [produto1, produto2, produto3, produto4],
                    datasets: [{
                        label: 'ESTOQUE ATUAL (Os 4 Produtos com baixa quantia em estoque)',
                        data: [quantidadeProduto1, quantidadeProduto2, quantidadeProduto3, quantidadeProduto4 || 0, 0, 0, 0],
                        backgroundColor: 'rgba(255, 152, 0, 0.2)',
                        borderColor: '#FF9800',
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        } else {
            console.error("Erro: Não foram encontrados dados suficientes para o gráfico.");
        }
    }).fail((jqXHR, textStatus, errorThrown) => {
        console.error("Erro na requisição: " + textStatus, errorThrown);
    });
}





function totalProdutosEstoque(){
    const id_empresa = sessionStorage.getItem('id_empresa')

    $.ajax({
        url: `/totalProdutos/${id_empresa}`,
        method: 'GET',
        contentType: 'application/json',
    }).done((response)=>{
        if(response){
            const valor = response
        }
    })
}

function sessao() {
    const id_empresa = sessionStorage.getItem('id_empresa');
    
    // Verifica se id_empresa não existe ou está vazio
    if (!id_empresa) {
        window.location.href = '/' ;  // Redireciona para a página de login
    }
}


$(document).ready(function(){
    const id_empresa = sessionStorage.getItem('id_empresa')
    $('#Datatable').DataTable({
        pageLength: 5,
        processing: true,
        serverSide: false,
        searching: false,
        info: true,
        ordering: false,
        pagingType: 'simple_numbers',
        lengthChange: false,
        autoWidth: false,
        language: {
            sProcessing: "Processando...",
            sLengthMenu: "Exibir _MENU_ registros por página",
            sZeroRecords: "Nenhum resultado encontrado",
            sEmptyTable: "Nenhum resultado encontrado",
            sInfo: "Exibindo do _START_ até _END_ de um total de _TOTAL_ registros",
            sInfoEmpty: "Exibindo do 0 até 0 de um total de 0 registros",
            sInfoFiltered: "(Filtrado de um total de _MAX_ registros)",
            sSearch: "Buscar:",
            sLoadingRecords: "Carregando...",
            oPaginate:{
                sFirst: "Primeiro",
                sLast: "Último",
                sNext: "Próximo",
                sPrevious: "Anterior"
            },
            oAria: {
                sSortAscending: ": Ativar para ordenar a coluna de maneira ascendente",
                sSortDescending: ": Ativar para ordenar a coluna de maneira descendente"
            }
        },
        ajax:{
            url: `/populaDatatable/${id_empresa}`,
            dataSrc: 'data'
        },
        columnDefs: [
            { width: "15%", targets: 0, className: 'text-center' }, // PRODUTO
            { width: "10%", targets: 1, className: 'text-center' }, // MARCA
            { width: "7%", targets: 2, className: 'text-center' }, // COR
            { width: "7%", targets: 3, className: 'text-center' }, // VALOR
            { width: "5%", targets: 4, className: 'text-center' }, // QUANTIDADE
            { width: "3%", targets: 5, className: 'text-center' }, // MEDIDA
            { width: "2%", targets: 6, className: 'text-center' }
            
        ],
        columns:[
            {data: 'produto'},
            {data: 'marca'},
            {data: 'cor'},
            {data: 'valor'},
            {data: 'quantidade'},
            {data: 'medida'},
            {data: null,
                render: function(data){
                    return `
                    <button class="btn btn-info btn-sm" onclick="editar(${data.id_produto})"><i class="ri-pencil-line"></i></button>&nbsp;
                    `
                }
            }
        ]
    })
})

// Verifica a cada 2 segundos
setInterval(() => {
    sessao();
}, 1000);

let id_produto = ''
function editar(id){
    const modalElement = document.getElementById('exampleModal');
    const modal = new bootstrap.Modal(modalElement);
    modal.show();
    id_produto = id
}

function salvar(){
    const id = id_produto
    const produto = $("#produto").val()
    const marca = $("#marca").val()
    const cor = $("#cor").val()
    const valor = $("#valor").val()
    const quantidade = $("#quantidade").val()
    const medida = $("#medida").val()
    const descricao = $("#descricao").val()

    const body = {produto, marca, cor, valor, quantidade, medida, descricao}
        $.ajax({
            url: `/editaProduto/${id}`,
            method: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(body)
        }).done((response)=>{
            if(response.success){
                Swal.fire({
                icon: 'success',
                postion: 'top-end',
                title: 'Alterado com sucesso',
                ShowConfirmButton: false,
                timer: 1500
            })
        }
    }).fail((erro)=>{
        if(erro){
            Swal.fire({
                icon: 'error',
                postion: 'top-end',
                title: 'Erro ao alterar',
                ShowConfirmButton: false,
                timer: 1500
            })
        }
    })
}

//mostra total produto
function totalProduto(){
    const id_empresa = sessionStorage.getItem('id_empresa')
    $.ajax({
        url: `/totalProduto/${id_empresa}`,
        method: 'GET',
        contentType: 'application/json'
    }).done((response)=>{
        if(response){
            const valor = Number(response[0].total)
            const valorFormatado = valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
            document.getElementById('total-produtos').textContent = valorFormatado
        }
    })
}

//quantidade em falta
function produtoFalta(){
    const id_empresa = sessionStorage.getItem('id_empresa')
    $.ajax({
        url: `/produtoEmfalta/${id_empresa}`,
        method: 'GET',
        contentType: 'application/json'
    }).done((response)=>{
        const falta = response[0].Quantidade_Produto
        document.getElementById('produto_falta').textContent = falta
    })
}

$(document).ready(function(){
    graficoBarra();
    graficoMinimo();
    totalProduto();
    produtoFalta()
})
    </script>
</body>

</html>